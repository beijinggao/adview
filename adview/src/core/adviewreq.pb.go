// Code generated by protoc-gen-go.
// source: adviewreq.proto
// DO NOT EDIT!

/*
Package adviewreq is a generated protocol buffer package.

It is generated from these files:
	adviewreq.proto

It has these top-level messages:
	AdRequest
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type AdRequest struct {
	Id               *string                 `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Imp              []*AdRequest_Impression `protobuf:"bytes,2,rep,name=imp" json:"imp,omitempty"`
	App              *AdRequest_App          `protobuf:"bytes,3,req,name=app" json:"app,omitempty"`
	Device           *AdRequest_Device       `protobuf:"bytes,4,req,name=device" json:"device,omitempty"`
	User             *AdRequest_User         `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	At               *int32                  `protobuf:"varint,6,opt,name=at" json:"at,omitempty"`
	Tmax             *int32                  `protobuf:"varint,7,opt,name=tmax" json:"tmax,omitempty"`
	Weat             []string                `protobuf:"bytes,8,rep,name=weat" json:"weat,omitempty"`
	Cur              []string                `protobuf:"bytes,9,rep,name=cur" json:"cur,omitempty"`
	Bcat             []string                `protobuf:"bytes,10,rep,name=bcat" json:"bcat,omitempty"`
	Badv             []string                `protobuf:"bytes,11,rep,name=badv" json:"badv,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *AdRequest) Reset()                    { *m = AdRequest{} }
func (m *AdRequest) String() string            { return proto.CompactTextString(m) }
func (*AdRequest) ProtoMessage()               {}
func (*AdRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AdRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AdRequest) GetImp() []*AdRequest_Impression {
	if m != nil {
		return m.Imp
	}
	return nil
}

func (m *AdRequest) GetApp() *AdRequest_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *AdRequest) GetDevice() *AdRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *AdRequest) GetUser() *AdRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AdRequest) GetAt() int32 {
	if m != nil && m.At != nil {
		return *m.At
	}
	return 0
}

func (m *AdRequest) GetTmax() int32 {
	if m != nil && m.Tmax != nil {
		return *m.Tmax
	}
	return 0
}

func (m *AdRequest) GetWeat() []string {
	if m != nil {
		return m.Weat
	}
	return nil
}

func (m *AdRequest) GetCur() []string {
	if m != nil {
		return m.Cur
	}
	return nil
}

func (m *AdRequest) GetBcat() []string {
	if m != nil {
		return m.Bcat
	}
	return nil
}

func (m *AdRequest) GetBadv() []string {
	if m != nil {
		return m.Badv
	}
	return nil
}

type AdRequest_Impression struct {
	Id               *string                      `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Banner           *AdRequest_Impression_Banner `protobuf:"bytes,2,req,name=banner" json:"banner,omitempty"`
	Instl            *int32                       `protobuf:"varint,3,req,name=instl" json:"instl,omitempty"`
	Native           *AdRequest_Impression_Native `protobuf:"bytes,4,opt,name=native" json:"native,omitempty"`
	Bidfloor         *int32                       `protobuf:"varint,5,opt,name=bidfloor" json:"bidfloor,omitempty"`
	Bidfloorcur      *string                      `protobuf:"bytes,6,opt,name=bidfloorcur" json:"bidfloorcur,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *AdRequest_Impression) Reset()                    { *m = AdRequest_Impression{} }
func (m *AdRequest_Impression) String() string            { return proto.CompactTextString(m) }
func (*AdRequest_Impression) ProtoMessage()               {}
func (*AdRequest_Impression) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *AdRequest_Impression) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AdRequest_Impression) GetBanner() *AdRequest_Impression_Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *AdRequest_Impression) GetInstl() int32 {
	if m != nil && m.Instl != nil {
		return *m.Instl
	}
	return 0
}

func (m *AdRequest_Impression) GetNative() *AdRequest_Impression_Native {
	if m != nil {
		return m.Native
	}
	return nil
}

func (m *AdRequest_Impression) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

func (m *AdRequest_Impression) GetBidfloorcur() string {
	if m != nil && m.Bidfloorcur != nil {
		return *m.Bidfloorcur
	}
	return ""
}

type AdRequest_Impression_Banner struct {
	W                *int32  `protobuf:"varint,1,req,name=w" json:"w,omitempty"`
	H                *int32  `protobuf:"varint,2,req,name=h" json:"h,omitempty"`
	Pos              *int32  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Btype            []int32 `protobuf:"varint,4,rep,name=btype" json:"btype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdRequest_Impression_Banner) Reset()         { *m = AdRequest_Impression_Banner{} }
func (m *AdRequest_Impression_Banner) String() string { return proto.CompactTextString(m) }
func (*AdRequest_Impression_Banner) ProtoMessage()    {}
func (*AdRequest_Impression_Banner) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 0}
}

func (m *AdRequest_Impression_Banner) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *AdRequest_Impression_Banner) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *AdRequest_Impression_Banner) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *AdRequest_Impression_Banner) GetBtype() []int32 {
	if m != nil {
		return m.Btype
	}
	return nil
}

type AdRequest_Impression_Native struct {
	Request          *string `protobuf:"bytes,1,req,name=request" json:"request,omitempty"`
	Ver              *string `protobuf:"bytes,2,req,name=ver" json:"ver,omitempty"`
	Api              []int32 `protobuf:"varint,3,rep,name=api" json:"api,omitempty"`
	Battr            []int32 `protobuf:"varint,4,rep,name=battr" json:"battr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdRequest_Impression_Native) Reset()         { *m = AdRequest_Impression_Native{} }
func (m *AdRequest_Impression_Native) String() string { return proto.CompactTextString(m) }
func (*AdRequest_Impression_Native) ProtoMessage()    {}
func (*AdRequest_Impression_Native) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 1}
}

func (m *AdRequest_Impression_Native) GetRequest() string {
	if m != nil && m.Request != nil {
		return *m.Request
	}
	return ""
}

func (m *AdRequest_Impression_Native) GetVer() string {
	if m != nil && m.Ver != nil {
		return *m.Ver
	}
	return ""
}

func (m *AdRequest_Impression_Native) GetApi() []int32 {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *AdRequest_Impression_Native) GetBattr() []int32 {
	if m != nil {
		return m.Battr
	}
	return nil
}

type AdRequest_App struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Domain           *string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	Cat              []int32 `protobuf:"varint,4,rep,name=cat" json:"cat,omitempty"`
	Ver              *string `protobuf:"bytes,5,opt,name=ver" json:"ver,omitempty"`
	Bundle           *string `protobuf:"bytes,6,req,name=bundle" json:"bundle,omitempty"`
	Paid             *int32  `protobuf:"varint,7,opt,name=paid" json:"paid,omitempty"`
	Keywords         *string `protobuf:"bytes,8,opt,name=keywords" json:"keywords,omitempty"`
	Storeurl         *string `protobuf:"bytes,9,opt,name=storeurl" json:"storeurl,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdRequest_App) Reset()                    { *m = AdRequest_App{} }
func (m *AdRequest_App) String() string            { return proto.CompactTextString(m) }
func (*AdRequest_App) ProtoMessage()               {}
func (*AdRequest_App) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

func (m *AdRequest_App) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AdRequest_App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *AdRequest_App) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *AdRequest_App) GetCat() []int32 {
	if m != nil {
		return m.Cat
	}
	return nil
}

func (m *AdRequest_App) GetVer() string {
	if m != nil && m.Ver != nil {
		return *m.Ver
	}
	return ""
}

func (m *AdRequest_App) GetBundle() string {
	if m != nil && m.Bundle != nil {
		return *m.Bundle
	}
	return ""
}

func (m *AdRequest_App) GetPaid() int32 {
	if m != nil && m.Paid != nil {
		return *m.Paid
	}
	return 0
}

func (m *AdRequest_App) GetKeywords() string {
	if m != nil && m.Keywords != nil {
		return *m.Keywords
	}
	return ""
}

func (m *AdRequest_App) GetStoreurl() string {
	if m != nil && m.Storeurl != nil {
		return *m.Storeurl
	}
	return ""
}

type AdRequest_Geo struct {
	Lat              *float32 `protobuf:"fixed32,1,opt,name=lat" json:"lat,omitempty"`
	Lon              *float32 `protobuf:"fixed32,2,opt,name=lon" json:"lon,omitempty"`
	Timestamp        *int32   `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Country          *string  `protobuf:"bytes,4,opt,name=country" json:"country,omitempty"`
	Region           *string  `protobuf:"bytes,5,opt,name=region" json:"region,omitempty"`
	City             *string  `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Type             *int32   `protobuf:"varint,7,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AdRequest_Geo) Reset()                    { *m = AdRequest_Geo{} }
func (m *AdRequest_Geo) String() string            { return proto.CompactTextString(m) }
func (*AdRequest_Geo) ProtoMessage()               {}
func (*AdRequest_Geo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

func (m *AdRequest_Geo) GetLat() float32 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

func (m *AdRequest_Geo) GetLon() float32 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *AdRequest_Geo) GetTimestamp() int32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *AdRequest_Geo) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *AdRequest_Geo) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *AdRequest_Geo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *AdRequest_Geo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type AdRequest_Device struct {
	Dnt              *int32         `protobuf:"varint,1,req,name=dnt" json:"dnt,omitempty"`
	Ua               *string        `protobuf:"bytes,2,req,name=ua" json:"ua,omitempty"`
	Ip               *string        `protobuf:"bytes,3,req,name=ip" json:"ip,omitempty"`
	Geo              *AdRequest_Geo `protobuf:"bytes,4,req,name=geo" json:"geo,omitempty"`
	Did              *string        `protobuf:"bytes,5,opt,name=did" json:"did,omitempty"`
	Dpid             *string        `protobuf:"bytes,6,opt,name=dpid" json:"dpid,omitempty"`
	Mac              *string        `protobuf:"bytes,7,req,name=mac" json:"mac,omitempty"`
	Ipv6             *string        `protobuf:"bytes,8,opt,name=ipv6" json:"ipv6,omitempty"`
	Carrier          *string        `protobuf:"bytes,9,req,name=carrier" json:"carrier,omitempty"`
	Language         *string        `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	Make             *string        `protobuf:"bytes,11,req,name=make" json:"make,omitempty"`
	Model            *string        `protobuf:"bytes,12,req,name=model" json:"model,omitempty"`
	Os               *string        `protobuf:"bytes,13,req,name=os" json:"os,omitempty"`
	Osv              *string        `protobuf:"bytes,14,req,name=osv" json:"osv,omitempty"`
	Js               *int32         `protobuf:"varint,15,opt,name=js" json:"js,omitempty"`
	Connectiontype   *int32         `protobuf:"varint,16,req,name=connectiontype" json:"connectiontype,omitempty"`
	Devicetype       *int32         `protobuf:"varint,17,req,name=devicetype" json:"devicetype,omitempty"`
	SDensity         *float32       `protobuf:"fixed32,18,opt,name=s_density" json:"s_density,omitempty"`
	Sw               *int32         `protobuf:"varint,19,req,name=sw" json:"sw,omitempty"`
	Sh               *int32         `protobuf:"varint,20,req,name=sh" json:"sh,omitempty"`
	Orientation      *int32         `protobuf:"varint,21,opt,name=orientation" json:"orientation,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AdRequest_Device) Reset()                    { *m = AdRequest_Device{} }
func (m *AdRequest_Device) String() string            { return proto.CompactTextString(m) }
func (*AdRequest_Device) ProtoMessage()               {}
func (*AdRequest_Device) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 3} }

func (m *AdRequest_Device) GetDnt() int32 {
	if m != nil && m.Dnt != nil {
		return *m.Dnt
	}
	return 0
}

func (m *AdRequest_Device) GetUa() string {
	if m != nil && m.Ua != nil {
		return *m.Ua
	}
	return ""
}

func (m *AdRequest_Device) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *AdRequest_Device) GetGeo() *AdRequest_Geo {
	if m != nil {
		return m.Geo
	}
	return nil
}

func (m *AdRequest_Device) GetDid() string {
	if m != nil && m.Did != nil {
		return *m.Did
	}
	return ""
}

func (m *AdRequest_Device) GetDpid() string {
	if m != nil && m.Dpid != nil {
		return *m.Dpid
	}
	return ""
}

func (m *AdRequest_Device) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *AdRequest_Device) GetIpv6() string {
	if m != nil && m.Ipv6 != nil {
		return *m.Ipv6
	}
	return ""
}

func (m *AdRequest_Device) GetCarrier() string {
	if m != nil && m.Carrier != nil {
		return *m.Carrier
	}
	return ""
}

func (m *AdRequest_Device) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *AdRequest_Device) GetMake() string {
	if m != nil && m.Make != nil {
		return *m.Make
	}
	return ""
}

func (m *AdRequest_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *AdRequest_Device) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *AdRequest_Device) GetOsv() string {
	if m != nil && m.Osv != nil {
		return *m.Osv
	}
	return ""
}

func (m *AdRequest_Device) GetJs() int32 {
	if m != nil && m.Js != nil {
		return *m.Js
	}
	return 0
}

func (m *AdRequest_Device) GetConnectiontype() int32 {
	if m != nil && m.Connectiontype != nil {
		return *m.Connectiontype
	}
	return 0
}

func (m *AdRequest_Device) GetDevicetype() int32 {
	if m != nil && m.Devicetype != nil {
		return *m.Devicetype
	}
	return 0
}

func (m *AdRequest_Device) GetSDensity() float32 {
	if m != nil && m.SDensity != nil {
		return *m.SDensity
	}
	return 0
}

func (m *AdRequest_Device) GetSw() int32 {
	if m != nil && m.Sw != nil {
		return *m.Sw
	}
	return 0
}

func (m *AdRequest_Device) GetSh() int32 {
	if m != nil && m.Sh != nil {
		return *m.Sh
	}
	return 0
}

func (m *AdRequest_Device) GetOrientation() int32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return 0
}

type AdRequest_User struct {
	Id               *string        `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Yob              *int32         `protobuf:"varint,2,opt,name=yob" json:"yob,omitempty"`
	Gender           *string        `protobuf:"bytes,3,opt,name=gender" json:"gender,omitempty"`
	Keywords         *string        `protobuf:"bytes,4,opt,name=keywords" json:"keywords,omitempty"`
	Geo              *AdRequest_Geo `protobuf:"bytes,5,opt,name=geo" json:"geo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AdRequest_User) Reset()                    { *m = AdRequest_User{} }
func (m *AdRequest_User) String() string            { return proto.CompactTextString(m) }
func (*AdRequest_User) ProtoMessage()               {}
func (*AdRequest_User) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 4} }

func (m *AdRequest_User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AdRequest_User) GetYob() int32 {
	if m != nil && m.Yob != nil {
		return *m.Yob
	}
	return 0
}

func (m *AdRequest_User) GetGender() string {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return ""
}

func (m *AdRequest_User) GetKeywords() string {
	if m != nil && m.Keywords != nil {
		return *m.Keywords
	}
	return ""
}

func (m *AdRequest_User) GetGeo() *AdRequest_Geo {
	if m != nil {
		return m.Geo
	}
	return nil
}

func init() {
	proto.RegisterType((*AdRequest)(nil), "AdRequest")
	proto.RegisterType((*AdRequest_Impression)(nil), "AdRequest.Impression")
	proto.RegisterType((*AdRequest_Impression_Banner)(nil), "AdRequest.Impression.Banner")
	proto.RegisterType((*AdRequest_Impression_Native)(nil), "AdRequest.Impression.Native")
	proto.RegisterType((*AdRequest_App)(nil), "AdRequest.App")
	proto.RegisterType((*AdRequest_Geo)(nil), "AdRequest.Geo")
	proto.RegisterType((*AdRequest_Device)(nil), "AdRequest.Device")
	proto.RegisterType((*AdRequest_User)(nil), "AdRequest.User")
}

var fileDescriptor1 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0x93, 0xa6, 0x5b, 0x5e, 0xb7, 0x76, 0xcb, 0x18, 0xb2, 0x0a, 0x48, 0x63, 0xa7, 0x1e,
	0x50, 0x0f, 0x3b, 0x70, 0xe0, 0xb6, 0x09, 0x09, 0x71, 0xe1, 0x80, 0xc4, 0x15, 0xe4, 0x26, 0xa6,
	0x33, 0x4b, 0x6c, 0xcf, 0x76, 0x5a, 0xfa, 0x19, 0xf8, 0x26, 0x7c, 0x15, 0x4e, 0x7c, 0x23, 0x9e,
	0x5f, 0x9c, 0x2a, 0x42, 0x70, 0xeb, 0xf3, 0x7b, 0x7e, 0xfe, 0xfd, 0x4b, 0x61, 0xce, 0xab, 0xad,
	0x14, 0x3b, 0x2b, 0x1e, 0x57, 0xc6, 0x6a, 0xaf, 0xaf, 0x7f, 0xe5, 0x90, 0xdf, 0x56, 0x1f, 0xc5,
	0x63, 0x2b, 0x9c, 0x2f, 0x00, 0x12, 0x59, 0xb1, 0xd1, 0x55, 0xb2, 0xcc, 0x8b, 0x6b, 0x48, 0x65,
	0x63, 0x58, 0x72, 0x95, 0x2e, 0xa7, 0x37, 0x97, 0xab, 0xc3, 0xd0, 0xea, 0x7d, 0x63, 0xac, 0x70,
	0x4e, 0x6a, 0x55, 0x3c, 0x83, 0x94, 0x1b, 0xc3, 0x52, 0xbc, 0x30, 0xbd, 0x99, 0x0d, 0x66, 0x6e,
	0x8d, 0x29, 0x5e, 0xc2, 0xa4, 0x12, 0x5b, 0x59, 0x0a, 0x36, 0xa6, 0xfe, 0xf9, 0xa0, 0xff, 0x96,
	0x1a, 0xc5, 0x0b, 0x18, 0xb7, 0x4e, 0x58, 0x96, 0x5d, 0x8d, 0x70, 0x60, 0x3e, 0x18, 0xf8, 0x84,
	0xc7, 0x01, 0x0e, 0xf7, 0x6c, 0x82, 0xcd, 0xac, 0x38, 0x81, 0xb1, 0x6f, 0xf8, 0x77, 0x76, 0xd4,
	0x57, 0x3b, 0x81, 0xbd, 0x63, 0x44, 0x97, 0x17, 0x53, 0x48, 0xcb, 0xd6, 0xb2, 0x9c, 0x0a, 0x6c,
	0xad, 0x4b, 0x6c, 0xc1, 0xa1, 0x42, 0xce, 0x6c, 0x1a, 0xaa, 0xc5, 0xcf, 0x04, 0x60, 0x00, 0x7f,
	0x48, 0xf7, 0x15, 0x4c, 0xd6, 0x5c, 0x29, 0x04, 0x93, 0x10, 0xda, 0xe7, 0xff, 0x64, 0xbc, 0xba,
	0xa3, 0x99, 0xe2, 0x14, 0x32, 0xa9, 0x9c, 0xaf, 0x89, 0x7a, 0x16, 0x2e, 0x2b, 0xee, 0xe5, 0x36,
	0x50, 0x1d, 0xfd, 0xff, 0xf2, 0x07, 0x9a, 0x29, 0xce, 0xe0, 0x78, 0x2d, 0xab, 0xaf, 0xb5, 0xd6,
	0x1d, 0xf3, 0xac, 0xb8, 0x80, 0x69, 0x7f, 0x12, 0x88, 0x04, 0xc6, 0xf9, 0xe2, 0x0d, 0x4c, 0xe2,
	0x6b, 0x39, 0x8c, 0x76, 0x04, 0x33, 0x0b, 0x3f, 0xef, 0x09, 0x61, 0x16, 0x58, 0x1b, 0xed, 0x10,
	0x41, 0xd8, 0x80, 0x80, 0xd6, 0x7e, 0x6f, 0x02, 0x80, 0x74, 0x99, 0x2d, 0xee, 0x60, 0x12, 0x1f,
	0x9b, 0xc3, 0x91, 0xed, 0x90, 0x44, 0xa2, 0x78, 0x6d, 0x1b, 0x59, 0x52, 0xc1, 0x8d, 0xc4, 0x1d,
	0x69, 0xdc, 0xc1, 0xbd, 0xb7, 0x71, 0xc7, 0x8f, 0x11, 0xa4, 0xc1, 0xc7, 0xa1, 0x4a, 0x28, 0xa7,
	0xe2, 0x8d, 0x88, 0xb7, 0x67, 0xe8, 0xb0, 0x6e, 0xb8, 0x54, 0x04, 0xa2, 0xf3, 0x01, 0x95, 0xa7,
	0xeb, 0xfd, 0x3b, 0x19, 0x75, 0x70, 0x72, 0xdd, 0xaa, 0xaa, 0x16, 0xc8, 0x2d, 0xee, 0x31, 0x1c,
	0xb7, 0x76, 0x6e, 0xa2, 0x20, 0x0f, 0x62, 0xbf, 0xd3, 0xb6, 0x72, 0xe8, 0x68, 0x98, 0xc7, 0x13,
	0xe7, 0xb5, 0x15, 0xad, 0xad, 0xd1, 0xd6, 0xa0, 0x86, 0x86, 0xf4, 0x9d, 0xd0, 0x61, 0x6b, 0xcd,
	0x03, 0x95, 0xd1, 0x32, 0xa1, 0x42, 0x2b, 0x04, 0x13, 0x8a, 0x73, 0xc8, 0xbd, 0x6c, 0x90, 0x27,
	0x6f, 0x4c, 0x14, 0x05, 0xb9, 0x97, 0xba, 0x55, 0xde, 0xee, 0xc9, 0x17, 0x82, 0x61, 0xc5, 0x06,
	0xad, 0x88, 0xb0, 0x10, 0x46, 0x29, 0xfd, 0xbe, 0x13, 0x9c, 0x22, 0x16, 0x24, 0x24, 0x50, 0x8b,
	0xdf, 0x09, 0x4c, 0x62, 0x4c, 0xf1, 0x9d, 0x4a, 0xf9, 0xe8, 0x00, 0xca, 0xd1, 0xf2, 0x28, 0x40,
	0x90, 0xa6, 0x8b, 0x7f, 0x1e, 0xbe, 0x85, 0x8d, 0xd0, 0x31, 0xeb, 0xc3, 0x6f, 0x21, 0xc2, 0xae,
	0x90, 0xee, 0xe1, 0xd5, 0xca, 0x60, 0x35, 0xe9, 0x45, 0x6b, 0x78, 0x89, 0x8f, 0x46, 0x5d, 0xa4,
	0xd9, 0xbe, 0x8e, 0x2a, 0x04, 0xfc, 0xdc, 0x5a, 0x29, 0x42, 0xb6, 0x93, 0x4e, 0x96, 0x9a, 0xab,
	0x4d, 0xcb, 0x37, 0x02, 0xf3, 0x1d, 0x77, 0x35, 0xfc, 0x41, 0x60, 0xbe, 0x43, 0x1f, 0x1d, 0x6c,
	0x74, 0x25, 0x6a, 0x76, 0xd2, 0xc3, 0xc3, 0x80, 0x9c, 0xf6, 0x4e, 0x6b, 0xb7, 0x65, 0xb3, 0xbe,
	0xf1, 0xcd, 0xb1, 0x39, 0x89, 0xf4, 0x14, 0x66, 0xa5, 0xc6, 0x98, 0x95, 0x1e, 0x75, 0x21, 0xfe,
	0x67, 0xc4, 0x13, 0x87, 0xba, 0xcf, 0x97, 0xce, 0xce, 0xe9, 0x0c, 0x35, 0x76, 0x5f, 0x2a, 0xa1,
	0x5c, 0x10, 0xad, 0x20, 0xd9, 0x71, 0x95, 0xdb, 0xb1, 0x8b, 0x5e, 0x1a, 0x77, 0xcf, 0x9e, 0xd0,
	0x6f, 0x8c, 0xb4, 0x46, 0xe4, 0xca, 0xf3, 0xb0, 0x97, 0x5d, 0x92, 0xa6, 0x9f, 0x61, 0xdc, 0x7f,
	0xd8, 0x87, 0x48, 0x21, 0xb0, 0xbd, 0x5e, 0x93, 0x89, 0x59, 0x30, 0x68, 0x23, 0x54, 0x85, 0x84,
	0xd3, 0x3e, 0x07, 0x87, 0x64, 0x74, 0x16, 0x46, 0x99, 0xbb, 0x7f, 0x8c, 0xbf, 0x64, 0xfe, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xae, 0xf4, 0xfa, 0xf1, 0xdf, 0x04, 0x00, 0x00,
}
